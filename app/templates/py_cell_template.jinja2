{% if deps|length >0 %}
{% for d in deps %}
{{ d }}
{% endfor %}
{% endif %}

import argparse
import json
import os
arg_parser = argparse.ArgumentParser()

{%  for secret in cell.secrets|sort(attribute='name') %}
{{ secret['name'] }} = os.getenv('{{ secret['name'] }}')
{% endfor %}

arg_parser.add_argument('--id', action='store', type=str, required=True, dest='id')

{% for in_var in cell.inputs|sort(attribute='name') %}

{% if in_var['type'] == list  or in_var['type'] == 'list' %}
arg_parser.add_argument('--{{ in_var['name'] }}', action='store', type=str, required=True, dest='{{ in_var['name'] }}')
{% else %}
arg_parser.add_argument('--{{ in_var['name'] }}', action='store', type={{ in_var['type'] }}, required=True, dest='{{ in_var['name'] }}')
{% endif %}
{% endfor %}

{% for param in cell.params|sort(attribute='name') %}
{% if param['type'] == list  or param['type'] == 'list' %}
arg_parser.add_argument('--{{ param['name'] }}', action='store', type=str, required=True, dest='{{ param['name'] }}')
{% else %}
arg_parser.add_argument('--{{ param['name'] }}', action='store', type={{ param['type'] }}, required=True, dest='{{ param['name'] }}')
{% endif %}
{% endfor %}

args = arg_parser.parse_args()
print(args)

id = args.id

{% for in_var in cell.inputs|sort(attribute='name') %}
{% if in_var['type'] == list  or in_var['type'] == 'list' %}
{{ in_var['name']  }} = json.loads(args.{{ in_var['name']  }})
{% elif in_var['type'] == str or  in_var['type'] == 'str' %}
{{ in_var['name']  }} = args.{{ in_var['name']  }}.replace('"','')
{% else %}
{{ in_var['name']  }} = args.{{ in_var['name']  }}
{% endif %}
{% endfor %}

{% for param in cell.params|sort(attribute='name') %}
{% if param['type'] == list  or param['type'] == 'list' %}
print(args.{{ param['name']  }})
print(type(args.{{ param['name']  }}))
try:
    {{ param['name']  }} = json.loads(args.{{ param['name'] }})
except Exception as e:
    if e.__class__.__name__ == 'JSONDecodeError':
        import ast
        {{ param['name'] }} = ast.literal_eval(args.{{ param['name'] }}.replace('[','["').replace(',','","').replace('" ','"').replace(']','"]').replace("'",""))
    else:
        raise e
{% elif param['type'] == dict  or param['type'] == 'dict' %}
{{ param }} = json.loads(args.{{ param }})
{% elif param['type'] == str or  param['type'] == 'str' %}
{{ param['name'] }} = args.{{ param['name'] }}.replace('"','')
{% else %}
{{ param['name'] }} = args.{{ param['name'] }}
{% endif %}
{% endfor %}

{% for conf in confs %}
{{ conf['name'] }} = {{ conf['assignation'] }}
{% endfor %}

{{ cell.original_source }}

{% if cell.outputs|length > 0 %}
{% for out in cell.outputs %}
file_{{out['name']}} = open("/tmp/{{out['name']}}_" + id + ".json", "w")
file_{{out['name']}}.write(json.dumps({{out['name']}}))
file_{{out['name']}}.close()
{% endfor %}
{% endif %}