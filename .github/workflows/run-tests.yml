name: Run tests


on:
  workflow_call:
    inputs:
      runs-on:
        default: ubuntu-latest
        type: string
      debug:
        required: true
        type: string
      oidc_configuration_url:
        required: true
        type: string
      verify_ssl:
        required: true
        type: string
      disable_auth:
        required: true
        type: string
      root_path:
        required: true
        type: string
      test:
        required: true
        type: string
    secrets:
      configuration:
        required: true
      auth_token:
        required: true
      registry_token_for_tests:
        required: true

env:
  DEBUG: ${{ inputs.debug }}
  OIDC_CONFIGURATION_URL: ${{ inputs.oidc_configuration_url }}
  DISABLE_AUTH: ${{ inputs.disable_auth }}
  VERIFY_SSL: ${{ inputs.verify_ssl }}
  ROOT_PATH: ${{ inputs.root_path }}
  AUTH_TOKEN: ${{ secrets.auth_token }}
  CONFIG_FILE_URL: /tmp/configuration.json
  REGISTRY_TOKEN_FOR_TESTS: ${{ secrets.registry_token_for_tests }}

jobs:
  test:
    runs-on: ${{ inputs.runs-on }}
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v4

      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          miniforge-version: latest

          python-version: 3.11
          path: ${{ env.CONDA }}/envs
          environment-file: environment.yaml
          activate-environment: naavre-containerizer-service
          use-mamba: true

      - name: Cache Conda environment
        uses: actions/cache@v4
        with:
          path: ${{ env.CONDA }}/envs
          key: conda-environment-${{ runner.os }}-${{ hashFiles('environment.yaml') }}
          restore-keys: |
            conda-environment-${{ runner.os }}-
        id: cache-conda

      - name: print environment variables
        run: |
          echo "DEBUG: $DEBUG"
          echo "OIDC_CONFIGURATION_URL: $OIDC_CONFIGURATION_URL"
          echo "DISABLE_AUTH: $DISABLE_AUTH"
          echo "VERIFY_SSL: $VERIFY_SSL"
          echo "ROOT_PATH: $ROOT_PATH"
          echo "AUTH_TOKEN: $AUTH_TOKEN"
          echo "CONFIG_FILE_URL: $CONFIG_FILE_URL"

      # - name: pytest
      #   shell: bash -l {0}
      #   run: |
      #     echo "${{ secrets.configuration }}" > "${{ env.CONFIG_FILE_URL }}"
      #     conda activate naavre-containerizer-service
      #     pytest ${{ inputs.test }} -s --ignore=docker --ignore=cypress --no-header --log-cli-level=DEBUG
